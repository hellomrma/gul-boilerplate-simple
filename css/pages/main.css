
/*# sourceMappingURL=data:application/json;charset=utf8;base64,{"version":3,"file":"pages/main.css","sources":["pages/main.scss","mixins/mixins.scss"],"sourcesContent":["@import \"../mixins/mixins.scss\";","@mixin aln {\r\n    display: inline-block;\r\n    height: 100%;\r\n    vertical-align: middle;\r\n    content: '';\r\n}\r\n\r\n@mixin clearfix {\r\n    &:after {\r\n        content: '';\r\n        display: block;\r\n        clear: both;\r\n    }\r\n}\r\n\r\n@mixin text-ellipsis($lines: 2) {\r\n    display: -webkit-box;\r\n    overflow: hidden;\r\n    word-wrap: break-word;\r\n    -webkit-line-clamp: $lines;\r\n    -webkit-box-orient: vertical;\r\n}\r\n\r\n@mixin css3-prefix($property, $value) {\r\n    -webkit-#{$property}: #{$value};\r\n    -khtml-#{$property}: #{$value};\r\n    -moz-#{$property}: #{$value};\r\n    -ms-#{$property}: #{$value};\r\n    -o-#{$property}: #{$value};\r\n    #{$property}: #{$value};\r\n}\r\n\r\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {\r\n    position: $position;\r\n    top: $top;\r\n    right: $right;\r\n    bottom: $bottom;\r\n    left: $left;\r\n}\r\n\r\n@mixin background-gradient($startColor: #3C3C3C, $endColor: #999999) {\r\n    background-color: $startColor;\r\n    background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));\r\n    background-image: -webkit-linear-gradient(top, $startColor, $endColor);\r\n    background-image: -moz-linear-gradient(top, $startColor, $endColor);\r\n    background-image: -ms-linear-gradient(top, $startColor, $endColor);\r\n    background-image: -o-linear-gradient(top, $startColor, $endColor);\r\n    background-image: linear-gradient(top, $startColor, $endColor);\r\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');\r\n}\r\n\r\n@mixin background-horizontal($startColor: #3C3C3C, $endColor: #999999) {\r\n    background-color: $startColor;\r\n    background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));\r\n    background-image: -webkit-linear-gradient(left, $startColor, $endColor);\r\n    background-image: -moz-linear-gradient(left, $startColor, $endColor);\r\n    background-image: -ms-linear-gradient(left, $startColor, $endColor);\r\n    background-image: -o-linear-gradient(left, $startColor, $endColor);\r\n    background-image: linear-gradient(left, $startColor, $endColor);\r\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}', gradientType='1');\r\n}\r\n\r\n@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos:100%) {\r\n    background: -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);\r\n    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos, $startColor), color-stop($endPos, $endColor));\r\n    background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);\r\n    background: -o-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);\r\n    background: -ms-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);\r\n    background: radial-gradient(ellipse at center, $startColor $startPos, $endColor $endPos);\r\n}\r\n\r\n@mixin background-size($width: 100%, $height: $width) {\r\n    @if type-of($width)=='number' and $height !=null {\r\n        @include css3-prefix('background-size', $width $height);\r\n    }\r\n    @else {\r\n        @include css3-prefix('background-size', $width);\r\n    }\r\n}\r\n\r\n@mixin background-opacity($color: #000, $opacity: 0.85) {\r\n    background: $color;\r\n    background: rgba($color, $opacity);\r\n}\r\n\r\n@mixin border-radius($radius: 5px) {\r\n    @include css3-prefix('border-radius', $radius);\r\n}\r\n\r\n@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {\r\n    -webkit-border-top-left-radius: $topLeftRadius;\r\n    -webkit-border-top-right-radius: $topRightRadius;\r\n    -webkit-border-bottom-right-radius: $bottomRightRadius;\r\n    -webkit-border-bottom-left-radius: $bottomLeftRadius;\r\n    -moz-border-radius-topleft: $topLeftRadius;\r\n    -moz-border-radius-topright: $topRightRadius;\r\n    -moz-border-radius-bottomright: $bottomRightRadius;\r\n    -moz-border-radius-bottomleft: $bottomLeftRadius;\r\n    border-top-left-radius: $topLeftRadius;\r\n    border-top-right-radius: $topRightRadius;\r\n    border-bottom-right-radius: $bottomRightRadius;\r\n    border-bottom-left-radius: $bottomLeftRadius;\r\n}\r\n\r\n@mixin box($orient: horizontal, $pack: center, $align: center) {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: box;\r\n    @include css3-prefix('box-orient', $orient);\r\n    @include css3-prefix('box-pack', $pack);\r\n    @include css3-prefix('box-align', $align);\r\n}\r\n\r\n@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {\r\n    background-color: transparent;\r\n    background-color: rgba($r, $g, $b, $opacity);\r\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color}', endColorstr='#{$color}');\r\n    zoom: 1;\r\n}\r\n\r\n@mixin box-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, .4), $inset: \"\") {\r\n    @if ($inset !=\"\") {\r\n        @include css3-prefix('box-shadow', $inset $x $y $blur $color);\r\n    }\r\n    @else {\r\n        @include css3-prefix('box-shadow', $x $y $blur $color);\r\n    }\r\n}\r\n\r\n@mixin box-sizing($type: border-box) {\r\n    @include css3-prefix('box-sizing', $type);\r\n}\r\n\r\n@mixin columns($count: 3, $gap: 10) {\r\n    @include css3-prefix('column-count', $count);\r\n    @include css3-prefix('column-gap', $gap);\r\n}\r\n\r\n@mixin double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0) {\r\n    border: 1px solid $colorOne;\r\n    @include css3-prefix('box-shadow', 0 0 0 1px $colorTwo);\r\n    @include border-radius( $radius);\r\n}\r\n\r\n@mixin flex($value: 1) {\r\n    @include css3-prefix('box-flex', $value);\r\n}\r\n\r\n@mixin flip($scaleX: -1) {\r\n    @include css3-prefix('transform', scaleX($scaleX));\r\n    filter: FlipH;\r\n    -ms-filter: \"FlipH\";\r\n}\r\n\r\n@mixin font-face($fontFamily: myFont, $eotFileSrc: 'myFont.eot', $woffFileSrc: 'myFont.woff', $ttfFileSrc: 'myFont.ttf', $svgFileSrc: 'myFont.svg', $svgFontID: '#myFont') {\r\n    font-family: $fontFamily;\r\n    src: url($eotFileSrc) format('eot'), url($woffFileSrc) format('woff'), url($ttfFileSrc) format('truetype'), url($svgFileSrc + $svgFontID) format('svg');\r\n}\r\n\r\n@mixin opacity($opacity: 0.5) {\r\n    $opacityMultiplied: ($opacity * 100);\r\n    filter: alpha(opacity=$opacityMultiplied);\r\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=\" + $opacityMultiplied + \")\";\r\n    @include css3-prefix('opacity', $opacity);\r\n}\r\n\r\n@mixin outline-radius($radius: 5px) {\r\n    @include css3-prefix('outline-radius', $radius);\r\n}\r\n\r\n@mixin resize($direction: both) {\r\n    @include css3-prefix('resize', $direction);\r\n}\r\n\r\n@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {\r\n    @include css3-prefix('transform', rotate($deg + deg));\r\n    filter: progid:DXImageTransform.Microsoft.Matrix( M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');\r\n    zoom: 1;\r\n}\r\n\r\n@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, .4)) {\r\n    text-shadow: $x $y $blur $color;\r\n}\r\n\r\n@mixin transform($params) {\r\n    @include css3-prefix('transform', $params);\r\n}\r\n\r\n@mixin transform-origin($params) {\r\n    @include css3-prefix('transform-origin', $params);\r\n}\r\n\r\n@mixin transform-style($style: preserve-3d) {\r\n    @include css3-prefix('transform-style', $style);\r\n}\r\n\r\n@mixin transition($properties...) {\r\n    @if length($properties)>=1 {\r\n        @include css3-prefix('transition', $properties);\r\n    }\r\n    @else {\r\n        @include css3-prefix('transition', \"all 0.2s ease-in-out 0s\");\r\n    }\r\n}\r\n\r\n@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {\r\n    border: 1px solid $colorOne;\r\n    @include border-radius($radius);\r\n    @include css3-prefix('box-shadow', \"0 0 0 1px #{$colorTwo}, 0 0 0 2px #{$colorThree}\");\r\n}\r\n\r\n@mixin keyframes($animation-name) {\r\n    @-webkit-keyframes #{$animation-name} {\r\n        @content;\r\n    }\r\n    @-moz-keyframes #{$animation-name} {\r\n        @content;\r\n    }\r\n    @-ms-keyframes #{$animation-name} {\r\n        @content;\r\n    }\r\n    @-o-keyframes #{$animation-name} {\r\n        @content;\r\n    }\r\n    @keyframes #{$animation-name} {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin animation($str) {\r\n    @include css3-prefix('animation', $str);\r\n}"],"mappings":"","names":[]} */
