/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-folder-02-sp-02-01 {
  background-image: url(../img/sprites/folder-02.png);
  background-position: 0px 0px;
  width: 13px;
  height: 13px;
}
.icon-folder-02-sp-02-02 {
  background-image: url(../img/sprites/folder-02.png);
  background-position: -17px 0px;
  width: 11px;
  height: 11px;
}
.icon-folder-02-sp-02-03 - 복사본 (2) {
  background-image: url(../img/sprites/folder-02.png);
  background-position: 0px -17px;
  width: 9px;
  height: 9px;
}
.icon-folder-02-sp-02-03 - 복사본 (3) {
  background-image: url(../img/sprites/folder-02.png);
  background-position: -13px -17px;
  width: 9px;
  height: 9px;
}
.icon-folder-02-sp-02-03 - 복사본 (4) {
  background-image: url(../img/sprites/folder-02.png);
  background-position: -32px 0px;
  width: 9px;
  height: 9px;
}
.icon-folder-02-sp-02-03 - 복사본 {
  background-image: url(../img/sprites/folder-02.png);
  background-position: -32px -13px;
  width: 9px;
  height: 9px;
}
.icon-folder-02-sp-02-03 {
  background-image: url(../img/sprites/folder-02.png);
  background-position: 0px -30px;
  width: 9px;
  height: 9px;
}
